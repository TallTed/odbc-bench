create proc new_order_proc

       @w_id         smallint,

       @d_id         tinyint,

       @c_id         int,

       @o_ol_cnt     tinyint,

       @o_all_local  tinyint,

       @i_id1  int = 0, @s_w_id1  smallint = 0, @ol_qty1  smallint = 0,

       @i_id2  int = 0, @s_w_id2  smallint = 0, @ol_qty2  smallint = 0,

       @i_id3  int = 0, @s_w_id3  smallint = 0, @ol_qty3  smallint = 0,

       @i_id4  int = 0, @s_w_id4  smallint = 0, @ol_qty4  smallint = 0,

       @i_id5  int = 0, @s_w_id5  smallint = 0, @ol_qty5  smallint = 0,

       @i_id6  int = 0, @s_w_id6  smallint = 0, @ol_qty6  smallint = 0,

       @i_id7  int = 0, @s_w_id7  smallint = 0, @ol_qty7  smallint = 0,

       @i_id8  int = 0, @s_w_id8  smallint = 0, @ol_qty8  smallint = 0,

       @i_id9  int = 0, @s_w_id9  smallint = 0, @ol_qty9  smallint = 0,

       @i_id10 int = 0, @s_w_id10 smallint = 0, @ol_qty10 smallint = 0,

       @i_id11 int = 0, @s_w_id11 smallint = 0, @ol_qty11 smallint = 0,

       @i_id12 int = 0, @s_w_id12 smallint = 0, @ol_qty12 smallint = 0,

       @i_id13 int = 0, @s_w_id13 smallint = 0, @ol_qty13 smallint = 0,

       @i_id14 int = 0, @s_w_id14 smallint = 0, @ol_qty14 smallint = 0,

       @i_id15 int = 0, @s_w_id15 smallint = 0, @ol_qty15 smallint = 0

as

    declare @w_tax       numeric(4,4),

            @d_tax       numeric(4,4),

            @c_last      char(16),

            @c_credit    char(2),

            @c_discount  numeric(4,4),

            @i_price     numeric(5,2),

            @i_name      char(24),

            @i_data      char(50),

            @o_entry_d   datetime,

            @remote_flag int,

            @s_quantity  smallint,

            @s_data      char(50),

            @s_dist      char(24),

            @li_no       int,

            @o_id        int,

            @commit_flag int,

            @li_id       int,

            @li_s_w_id   smallint,

            @li_qty      smallint,

            @ol_number   int,

            @c_id_local  int,
            @s_quant smallint, 
            @diff smallint, 
            @rem smallint

  begin



      begin transaction n



      /* get district tax and next available order id and update */

      /* plus initialize local variables */


      select
                 @d_tax       = d_tax,
                 @o_id        = d_next_o_id
             from district
             where d_w_id = @w_id and d_id = @d_id

      update district
             set
                 d_next_o_id  = d_next_o_id + 1
             where d_w_id = @w_id and d_id = @d_id

      select
                 @o_entry_d   = getdate(),
                 @li_no=0,
                 @commit_flag = 1


      /* process orderlines */

      while(@li_no < @o_ol_cnt)

       begin


         /* Set i_id, s_w_id and qty for this lineitem */


         select @li_no=@li_no+1
                
                if @li_no = 0 select @li_id = @i_id1, @li_s_w_id = @s_w_id1, @li_qty = @ol_qty1
                if @li_no = 1 select @li_id = @i_id2, @li_s_w_id = @s_w_id2, @li_qty = @ol_qty2
                if @li_no = 2 select @li_id = @i_id3, @li_s_w_id = @s_w_id3, @li_qty = @ol_qty3
                if @li_no = 3 select @li_id = @i_id4, @li_s_w_id = @s_w_id4, @li_qty = @ol_qty4
                if @li_no = 4 select @li_id = @i_id5, @li_s_w_id = @s_w_id5, @li_qty = @ol_qty5
                if @li_no = 5 select @li_id = @i_id6, @li_s_w_id = @s_w_id6, @li_qty = @ol_qty6
                if @li_no = 6 select @li_id = @i_id7, @li_s_w_id = @s_w_id7, @li_qty = @ol_qty7
                if @li_no = 7 select @li_id = @i_id8, @li_s_w_id = @s_w_id8, @li_qty = @ol_qty8
                if @li_no = 8 select @li_id = @i_id9, @li_s_w_id = @s_w_id9, @li_qty = @ol_qty9
                if @li_no = 9 select @li_id = @i_id10, @li_s_w_id = @s_w_id10, @li_qty = @ol_qty10
                if @li_no = 10 select @li_id = @i_id11, @li_s_w_id = @s_w_id11, 
@li_qty = @ol_qty11
                if @li_no = 11 select @li_id = @i_id12, @li_s_w_id = @s_w_id12, @li_qty = @ol_qty12
                if @li_no = 12 select @li_id = @i_id13, @li_s_w_id = @s_w_id13, @li_qty = @ol_qty13
                if @li_no = 13 select @li_id = @i_id14, @li_s_w_id = @s_w_id14, @li_qty = @ol_qty14
                if @li_no = 14 select @li_id = @i_id15, @li_s_w_id = @s_w_id15, @li_qty = @ol_qty15



         /* get item data (no one updates item) */



         select @i_price = i_price,

                @i_name  = i_name,

                @i_data  = i_data

                from item holdlock 

                where i_id = @li_id



         /* if there actually is an item with this id, go to work */



         if (@@rowcount > 0)

          begin

          if @li_s_w_id = @w_id 
            select @rem = 0
          else
            select @rem = 1 
          select @s_quant = s_quantity from stock 
                  where s_i_id = @li_id and s_w_id = @li_s_w_id
          if (@s_quant - @li_qty) < 10
              select @diff = 91 
            else 
              select @diff = 0

           update stock set s_ytd       = s_ytd + @li_qty,
                            s_quantity  =  s_quantity - @li_qty + @diff,
                            s_cnt_order = s_cnt_order + 1,
                            s_cnt_remote = s_cnt_remote + @rem
                  where s_i_id = @li_id and s_w_id = @li_s_w_id

            select 
                            @s_quantity = s_quantity,
                            @s_data     = s_data
                  from stock
                  where s_i_id = @li_id and s_w_id = @li_s_w_id

            if @d_id = 1 
              select 
                     @s_dist = s_dist_01 
                 from stock 
                 where  s_i_id = @li_id and s_w_id = @li_s_w_id
            else
            if @d_id = 2 
              select 
                     @s_dist = s_dist_02 
                 from stock 
                 where  s_i_id = @li_id and s_w_id = @li_s_w_id
            else
            if @d_id = 3 
              select 
                     @s_dist = s_dist_03 
                 from stock 
                 where  s_i_id = @li_id and s_w_id = @li_s_w_id
            else
            if @d_id = 4 
              select 
                     @s_dist = s_dist_04 
                 from stock 
                 where  s_i_id = @li_id and s_w_id = @li_s_w_id
            else
            if @d_id = 5 
              select 
                     @s_dist = s_dist_05 
                 from stock 
                 where  s_i_id = @li_id and s_w_id = @li_s_w_id
            else
            if @d_id = 6 
              select 
                     @s_dist = s_dist_06 
                 from stock 
                 where  s_i_id = @li_id and s_w_id = @li_s_w_id
            else
            if @d_id = 7 
              select 
                     @s_dist = s_dist_07 
                 from stock 
                 where  s_i_id = @li_id and s_w_id = @li_s_w_id
            else
            if @d_id = 8 
              select 
                     @s_dist = s_dist_08 
                 from stock 
                 where  s_i_id = @li_id and s_w_id = @li_s_w_id
            else
            if @d_id = 9 
              select 
                     @s_dist = s_dist_09 
                 from stock 
                 where  s_i_id = @li_id and s_w_id = @li_s_w_id
            else
            if @d_id = 10 
              select 
                     @s_dist = s_dist_10 
                 from stock 
                 where  s_i_id = @li_id and s_w_id = @li_s_w_id


           /* insert order_line data (using data from item and stock) */

           insert into order_line
                  values(@o_id,          /* from district update */
                         @d_id,          /* input param          */
                         @w_id,          /* input param          */
                         @li_no,         /* orderline number     */
                         @li_id,         /* lineitem id          */
                         @li_s_w_id,     /* lineitem warehouse   */
                         'dec 31, 1889', /* constant             */
                         @li_qty,        /* lineitem qty         */
                         @i_price * @li_qty, /* ol_amount        */
                         @s_dist)        /* from stock           */


           /* send line-item data to client */

           select @i_name, @s_quantity,
                  @i_price,
                  @i_price * @li_qty

          if ((patindex('%ORIGINAL%',@i_data) > 0) and
              (patindex('%ORIGINAL%',@s_data) > 0))
             select  b_g = 'B' 
          else 
             select b_g = 'G'

          end  -- /* condition: if (@@rowcount > 0) */

         else

          begin

           /* no item found - triggers rollback condition */

           select '', '',0

           select @commit_flag = 0

         end

       end -- /* of orderlines loop while(@li_no < @o_ol_cnt) */

      /* get customer last name, discount, and credit rating */

      select @c_last     = c_last,
             @c_discount = c_discount,
             @c_credit   = c_credit,
             @c_id_local = c_id
          from customer holdlock
          where c_id    = @c_id and
                c_w_id  = @w_id and
                c_d_id  = @d_id

      /* insert fresh row into orders table */

      insert into orders values(@o_id, @d_id, @w_id, @c_id_local,
                                @o_entry_d, 0, @o_ol_cnt, @o_all_local)

      /* insert corresponding row into new-order table */

      insert into new_order values (@o_id, @d_id, @w_id)

      /* select warehouse tax */

      select @w_tax = w_tax
             from warehouse holdlock
             where w_id = @w_id

      if (@commit_flag = 1)
          commit transaction n
      else
          /* all that work for nothing!!! */
          rollback transaction n

      /* return order data to client */

      select @w_tax,
             @d_tax,
             @o_id,
             @c_last,
             @c_discount,
             @c_credit,
             @o_entry_d,
             @commit_flag
  end
;
create procedure payment
       @w_id         smallint,
       @c_w_id       smallint,
       @h_amount     float,
       @d_id         tinyint,
       @c_d_id       tinyint,
       @c_id         int,
       @c_last       char(16) = " "
as
    declare @w_street_1    char(20),
            @w_street_2    char(20),
            @w_city        char(20),
            @w_state       char(2),
            @w_zip         char(9),
            @w_name        char(10),
            @d_street_1    char(20),
            @d_street_2    char(20),
            @d_city        char(20),
            @d_state       char(2),
            @d_zip         char(9),
            @d_name        char(10),
            @c_first       char(16),
            @c_middle      char(2),
            @c_street_1    char(20),
            @c_street_2    char(20),
            @c_city        char(20),
            @c_state       char(2),
            @c_zip         char(9),
            @c_phone       char(16),
            @c_since       datetime,
            @c_credit      char(2),
            @c_credit_lim  float,
            @c_balance     float,
            @c_ytd_payment float,
            @c_discount    float,
            @data1         char(250),
            @data2         char(250),
            @c_data_1      char(250),
            @c_data_2      char(250),
            @datetime      datetime,
            @w_ytd         float,
            @d_ytd         float,
            @cnt           smallint,
            @val           smallint,
            @screen_data   char(200),
            @d_id_local    tinyint,
            @w_id_local    smallint,
            @c_id_local    int


begin

    select @screen_data = ''

    begin transaction p

    /* get payment date */

    select @datetime = getdate()

    if (@c_id = 0)
     begin
        /* get customer id and info using last name */
        select @cnt = count(*)
            from customer holdlock
            where c_last = @c_last and
                  c_w_id = @c_w_id and
                  c_d_id = @c_d_id

        select @val = (@cnt + 1) / 2
        set rowcount @val

        select @c_id      = c_id
            from customer holdlock
            where c_last = @c_last and
                  c_w_id = @c_w_id and
                  c_d_id = @c_d_id
            order by c_w_id, c_d_id, c_last, c_first

        set rowcount 0
     end

    /* get customer info and update balances */

    select
        @c_balance = c_balance - @h_amount,
        @c_first         = c_first,
        @c_middle        = c_middle,
        @c_last          = c_last,
        @c_street_1      = c_street_1,
        @c_street_2      = c_street_2,
        @c_city          = c_city,
        @c_state         = c_state,
        @c_zip           = c_zip,
        @c_phone         = c_phone,
        @c_credit        = c_credit,
        @c_credit_lim    = c_credit_lim,
        @c_discount      = c_discount,
        @c_since         = c_since,
        @data1           = c_data_1,
        @data2           = c_data_2,
        @c_id_local      = c_id
       from customer
       where c_id   = @c_id and
             c_w_id = @c_w_id and
             c_d_id = @c_d_id

    update customer set
        c_balance = @c_balance,
        c_cnt_payment   = c_cnt_payment + 1
       where c_id   = @c_id and
             c_w_id = @c_w_id and
             c_d_id = @c_d_id

    select
        @c_ytd_payment   = c_ytd_payment + 10.0 /* @h_amount */
       from customer
       where c_id   = @c_id and
             c_w_id = @c_w_id and
             c_d_id = @c_d_id

    /* if customer has bad credit get some more info */

    if (@c_credit = 'BC')
     begin
        /* compute new info (Kublissa on myos substring) */
        select @c_data_2 = substring(@data1,209,42) +
                           substring(@data2,1,208)
        select @c_data_1 = convert(char(5),@c_id) + 
                           convert(char(4),@c_d_id) +
                           convert(char(5),@c_w_id) +
                           convert(char(4),@d_id) +
                           convert(char(5),@w_id) +
                           convert(char(19),@h_amount) +
                           substring(@data1, 1, 208)

        /* update customer info */
        update customer set
               c_data_1 = @c_data_1,
               c_data_2 = @c_data_2
            where c_id   = @c_id and
                  c_w_id = @c_w_id and
                  c_d_id = @c_d_id


        select @screen_data = substring(@c_data_1,1,200)

     end


    /* get district data and update year-to-date */

    update district
        set d_ytd       = d_ytd + @h_amount
        where d_w_id = @w_id and
              d_id   = @d_id

    select
            @d_street_1 = d_street_1,
            @d_street_2 = d_street_2,
            @d_city     = d_city,
            @d_state    = d_state,
            @d_zip      = d_zip,
            @d_name     = d_name,
            @d_id_local = d_id
        from district
        where d_w_id = @w_id and
              d_id   = @d_id

    /* get warehouse data and update year-to-date */

    update warehouse
        set w_ytd       = w_ytd + @h_amount
        where w_id = @w_id

    select 
            @w_street_1 = w_street_1,
            @w_street_2 = w_street_2,
            @w_city     = w_city,
            @w_state    = w_state,
            @w_zip      = w_zip,
            @w_name     = w_name,
            @w_id_local = w_id
        from warehouse
        where w_id = @w_id

    /* create thistory record */

    insert into thistory
        values(@c_id_local,
               @c_d_id,
               @c_w_id,
               @d_id_local,
               @w_id_local,
               @datetime,
               @h_amount,
               @w_name + '    ' + @d_name) /* 10 + 4 + 10 = 24 */

    commit tran p

    /* return data to client */

    select @c_id,
           @c_last,
           @datetime,
           @w_street_1,
           @w_street_2,
           @w_city,
           @w_state,
           @w_zip,
           @d_street_1,
           @d_street_2,
           @d_city,
           @d_state,
           @d_zip,
           @c_first,
           @c_middle,
           @c_street_1,
           @c_street_2,
           @c_city,
           @c_state,
           @c_zip,
           @c_phone,
           @c_since,
           @c_credit,

	   @c_credit_lim,

           @c_discount,
           @c_balance,
           @screen_data
end
;
create proc delivery  @w_id smallint, @o_carrier_id smallint
as
    declare @d_id tinyint,
            @o_id int,
            @c_id int,
            @total numeric(12,2),
            @oid1 int,
            @oid2 int,
            @oid3 int,
            @oid4 int,
            @oid5 int,
            @oid6 int,
            @oid7 int,
            @oid8 int,
            @oid9 int,
            @oid10 int

    select @d_id = 0

    begin tran d
 
        while (@d_id < 10)
        begin

            select @d_id = @d_id + 1,
                   @total = 0,
                   @o_id = 0

            select @o_id = min(no_o_id)
                   from new_order holdlock
                   where no_w_id = @w_id and no_d_id = @d_id

            if(@@rowcount <> 0)
            begin

--              /* claim the order for this district */

                delete new_order
                       where no_w_id = @w_id and no_d_id = @d_id
                         and no_o_id = @o_id

--              /* set carrier_id on this order (and get customer id) */

                update orders
                       set o_carrier_id = @o_carrier_id
                       where o_w_id = @w_id and o_d_id = @d_id
                         and o_id = @o_id

                select
                       @c_id = o_c_id
                       from orders
                       where o_w_id = @w_id and o_d_id = @d_id
                         and o_id = @o_id

--      /* set date in all lineitems for this order (and sum amounts) */


                update order_line
                       set ol_delivery_d = getdate()
                       where ol_w_id = @w_id and
                             ol_d_id = @d_id and
                             ol_o_id = @o_id

                select
                       @total = @total + ol_amount
                       from order_line
                       where ol_w_id = @w_id and
                             ol_d_id = @d_id and
                             ol_o_id = @o_id

--      /* accumulate lineitem amounts for this order into customer */

                update customer
                       set c_balance      = c_balance + @total,
                           c_cnt_delivery = c_cnt_delivery + 1
                       where c_w_id = @w_id and
                             c_d_id = @d_id and
                             c_id = @c_id

            end


            if @d_id = 1 
              select @oid1 = @o_id
            else 
              if @d_id = 2   
                select @oid2 = @o_id
              else 
                if @d_id = 3  
                  select @oid3 = @o_id
                else  
                  if @d_id = 4  
                    select @oid4 = @o_id
                  else 
                    if @d_id = 5  
                      select @oid5 = @o_id
                    else 
                      if @d_id = 6  
                        select @oid6 = @o_id
                      else 
                        if @d_id = 7  
                          select @oid7 = @o_id
                        else 
                          if @d_id = 8  
                            select @oid8 = @o_id
                          else 
                            if @d_id = 9  
                              select @oid9 = @o_id
                            else 
                              if @d_id = 10 
                                select @oid10 = @o_id
   

        end

    commit tran d

    select @oid1,
           @oid2,
           @oid3,
           @oid4,
           @oid5,
           @oid6,
           @oid7,
           @oid8,
           @oid9,
           @oid10


;
create proc slevel
       @w_id         smallint,
       @d_id         tinyint,
       @threshold    smallint
as
    declare @o_id int

    select @o_id = d_next_o_id
        from district
        where d_w_id = @w_id and d_id = @d_id

    select count(*) from stock, order_line
           where s_w_id     = @w_id and
                 ol_w_id   = @w_id and
                 ol_d_id   = @d_id and
                 ol_o_id between (@o_id-20) and (@o_id-1) and
                 s_i_id     = ol_i_id and
                 s_quantity < @threshold
;
create proc ostat
       @w_id         smallint,
       @d_id         tinyint,
       @c_id         int,
       @c_last       char(16) = " "
as
    declare @c_balance     numeric(12,2),
            @c_first       char(16),
            @c_middle      char(2),
            @o_id          int,
            @o_entry_d     datetime,
            @o_carrier_id  smallint,
            @cnt           smallint

    begin tran o

    if (@c_id = 0)
     begin
        /* get customer id and info using last name */
        select @cnt = (count(*)+1)/2
            from customer holdlock
            where c_last = @c_last and
                  c_w_id = @w_id and
                  c_d_id = @d_id
        set rowcount @cnt

        select @c_id      = c_id,
               @c_balance = c_balance,
               @c_first   = c_first,
               @c_last    = c_last,
               @c_middle  = c_middle
            from customer holdlock
            where c_last = @c_last and
                  c_w_id = @w_id and
                  c_d_id = @d_id
            order by c_w_id, c_d_id, c_last, c_first

        set rowcount 0
     end
    else
     begin
        /* get customer info by id */
        select @c_balance = c_balance,
               @c_first   = c_first,
               @c_middle  = c_middle,
               @c_last    = c_last
            from customer holdlock
            where c_id   = @c_id and
                  c_d_id = @d_id and
                  c_w_id = @w_id

        select @cnt = @@rowcount
     end

    /* if no such customer */
    if (@cnt = 0)
     begin
        raiserror 99999, "Customer not found"
        goto custnotfound
     end

    /* get order info */
    select @o_id         = o_id,
           @o_entry_d    = o_entry_d,
           @o_carrier_id = o_carrier_id
        from orders holdlock
        where o_w_id = @w_id and
              o_d_id = @d_id and
              o_c_id = @c_id

    /* select order lines for the current order */
    select ol_supply_w_id,
           ol_i_id,
           ol_quantity,
           ol_amount,
           ol_delivery_d
        from order_line holdlock
        where ol_o_id = @o_id and
              ol_d_id = @d_id and
              ol_w_id = @w_id

custnotfound:

    commit tran o

    /* return data to client */

    select @c_id,
           @c_last,
           @c_first,
           @c_middle,
           @o_entry_d,
           @o_carrier_id,
           @c_balance,
           @o_id
;
